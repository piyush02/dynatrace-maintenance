 # Bash Script README
 
This repository contains a Bash script that allows you to perform various operations related to maintenance in a Dynatrace environment. The script provides a menu-driven interface to select the desired operation.
Prerequisites

Before running the script, ensure that you have the following:

    Bash: The script is designed to be executed in a Bash environment.
    Dynatrace API access: You need valid API credentials to access the Dynatrace environment.

Usage

    Clone the repository to your local machine.

    Navigate to the script directory: cd <path/to/script>
    
    Make the script executable: chmod +x script.sh
    
    Run the script: ./script.sh

    Select the desired operation from the menu options.
    
    
Menu Options

The script provides the following menu options:

    get-list: Retrieve a list of entities (hosts, monitors, databases, process groups, or applications) from a Dynatrace environment.
    create-maintenance: Create a maintenance window for a specific entity in the Dynatrace environment.
    get-maintenance: Get the details of an existing maintenance window in the Dynatrace environment.
    delete-maintenance: Delete a maintenance window from the Dynatrace environment.
    quit: Exit the script.

Note: Some menu options may require additional input or authentication.
Script Structure

The script is divided into the following files:

    script.sh: The main script file that contains the menu-driven interface and handles user input.
    lib/get_list.sh: A supporting script file that retrieves a list of entities from the Dynatrace environment.
    lib/post_maintenance.sh: A supporting script file that creates a maintenance window for a specific entity.
    lib/get_maintenance.sh: A supporting script file that gets the details of an existing maintenance window.
    lib/delete_maintenance.sh: A supporting script file that deletes a maintenance window.
    

## Script Execution Directory

The script determines the execution directory based on the location of the script file.

## Select Operation

The script presents a menu of operations to choose from:

1. Get List
2. Create Maintenance
3. Get Maintenance
4. Delete Maintenance
5. Quit

## Perform Operation

Once an operation is selected, the script executes the corresponding functionality. Each operation is associated with a specific script file located in the `lib` directory:

- `get_list.sh`: Retrieves a list of items based on the user's selection.
- `post_maintenance.sh`: Creates a maintenance record based on the user's input.
- `get_maintenance.sh`: Retrieves maintenance details based on the user's input.
- `delete_maintenance.sh`: Deletes a maintenance record based on the user's input.

## Execution Flow

1. The script determines the execution directory and sets the working directory accordingly.
2. The current date and time are captured.
3. The user is prompted to select an operation from the menu.
4. Based on the user's selection, the corresponding script file is assigned to the variable `my_script`.
5. The `run_script` function is called to execute the selected script.
6. The selected script performs its specific functionality.

## Usage

To run the script, execute the following command:

```shell```
./script.sh

    
